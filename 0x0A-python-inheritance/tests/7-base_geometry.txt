#!/usr/bin/python3
"""
This module contains a test function for the BaseGeometry class
"""

import unittest
BaseGeometry = __import__('7-base_geometry').BaseGeometry


class TestBaseGeometry(unittest.TestCase):
    """Test cases for the BaseGeometry class"""

    def test_integer_validator(self):
        """Test the integer_validator method"""
        bg = BaseGeometry()

        # Test with valid integer
        self.assertIsNone(bg.integer_validator("valid_int", 10))

        # Test with invalid type
        with self.assertRaises(TypeError) as cm:
            bg.integer_validator("invalid_type", "not_an_integer")
        self.assertEqual(str(cm.exception), "invalid_type must be an integer")

        # Test with invalid value
        with self.assertRaises(ValueError) as cm:
            bg.integer_validator("invalid_value", 0)
        self.assertEqual(str(cm.exception), "invalid_value must be greater than 0")

    def test_area(self):
        """Test the area method"""
        bg = BaseGeometry()

        # Test with not implemented method
        with self.assertRaises(Exception) as cm:
            bg.area()
        self.assertEqual(str(cm.exception), "area() is not implemented")

if __name__ == "__main__":
    unittest.main()
